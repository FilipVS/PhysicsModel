<Window x:Class="ModelDisplay.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ModelDisplay"
        mc:Ignorable="d"
        xmlns:controls="clr-namespace:ModelDisplay.Controls" 
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        xmlns:phys="clr-namespace:PhysicsModel;assembly=PhysicsModel"
        Title="MainWindow" Height="450" Width="800"
        MinHeight="300" MinWidth="600"
        WindowStartupLocation="CenterScreen">

    <!-- Resources -->
    <Window.Resources>
        
        <!-- Value converters -->
        <local:DecimalRounderValueConverter x:Key="decimalRounderConverter"/>
        <local:DescriptionOfEnumValueConverter x:Key="enumDescriptionConverter"/>

    </Window.Resources>
    
    <!-- The data context of this widow will be instance of class WindowViewModel -->
    <Window.DataContext>
        <local:WindowViewModel x:Name="viewModel"></local:WindowViewModel>
    </Window.DataContext>
    
    <!-- Commands -->
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Delete" CanExecute="deleteCommand_CanExecute" Executed="deleteCommand_Executed"/>
        <CommandBinding Command="MediaCommands.Play" CanExecute="playCommand_CanExecute" Executed="playCommand_Executed"/>
    </Window.CommandBindings>
    
    <DockPanel LastChildFill="True">

        <!-- Toolbar (play, pause...) -->
        <ToolBar DockPanel.Dock="Top">
            <Button Padding="2" Margin="15 5" Command="MediaCommands.Play">Play</Button>
        </ToolBar>

        <!-- Choice between all the placed charges -->
        <ListBox DockPanel.Dock="Left" IsEnabled="{Binding AllowChargeSelection}"
                 SelectedItem="{Binding SelectedParticleElement}" MinWidth="30" Margin="10 10 0 10">

            <ListBox.ItemsSource>
                <MultiBinding>
                    <MultiBinding.Converter>
                        <local:UniteParticleEnumerableAndParticleMultiValueConverter/>
                    </MultiBinding.Converter>

                    <Binding Path="ForceFieldElements"/>
                    <Binding Path="ChargedParticleElement"/>
                </MultiBinding>
            </ListBox.ItemsSource>

            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <TextBlock HorizontalAlignment="Center" TextAlignment="Center" Text="{Binding Path=ChargeToDisplay}"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- Editing individual placed charges -->
        <GroupBox DockPanel.Dock="Right" BorderBrush="Red" BorderThickness="2" Margin="5 10 10 10">
            <GroupBox.Header>
                <CheckBox IsChecked="{Binding AllowChargeSelection}">Allow charge selection</CheckBox>
            </GroupBox.Header>
            
            <StackPanel DataContext="{Binding SelectedParticleElement.ChargeToDisplay}" Margin="2,5" Width="200">

                <StackPanel.Visibility>
                    <MultiBinding>
                        <MultiBinding.Converter>
                            <local:ChargeSelectionEnablerMultiValueConverter/>
                        </MultiBinding.Converter>
                        <Binding ElementName="viewModel" Path="AllowChargeSelection"/>
                        <Binding ElementName="viewModel" Path="SelectedParticleElement"/>
                    </MultiBinding>
                </StackPanel.Visibility>

                <StackPanel.Resources>
                    <!-- Default style for inside text boxes -->
                    <Style TargetType="TextBlock">
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="Margin" Value="0,2"/>
                    </Style>
                </StackPanel.Resources>
                
                <TextBlock FontSize="15" FontWeight="Bold" Text="{Binding FallbackValue='Charge to display'}"/>

                <!-- Position display -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock xml:space="preserve">Position: </TextBlock>
                    <TextBlock Text="{Binding Path=Position.X, Converter={StaticResource decimalRounderConverter}}"/>
                    <TextBlock xml:space="preserve">, </TextBlock>
                    <TextBlock Text="{Binding Path=Position.Y, Converter={StaticResource decimalRounderConverter}}"/>
                </StackPanel>

                <!-- Velocity display -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock xml:space="preserve">Velocity: </TextBlock>
                    <TextBlock Text="{Binding Path=Velocity.Velocity.X, Converter={StaticResource decimalRounderConverter}}"/>
                    <TextBlock xml:space="preserve">, </TextBlock>
                    <TextBlock Text="{Binding Path=Velocity.Velocity.Y, Converter={StaticResource decimalRounderConverter}}"/>
                    <TextBlock xml:space="preserve"> </TextBlock>
                    <TextBlock Text="{Binding Path=Velocity.Unit, Converter={StaticResource enumDescriptionConverter}}"/>
                </StackPanel>

                <!-- Acceleration display -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock xml:space="preserve">Acceleration: </TextBlock>
                    <TextBlock Text="{Binding Path=Acceleration.Acceleration.X, Converter={StaticResource decimalRounderConverter}}"/>
                    <TextBlock xml:space="preserve">, </TextBlock>
                    <TextBlock Text="{Binding Path=Acceleration.Acceleration.Y, Converter={StaticResource decimalRounderConverter}}"/>
                    <TextBlock xml:space="preserve"> </TextBlock>
                    <TextBlock Text="{Binding Path=Acceleration.Unit, Converter={StaticResource enumDescriptionConverter}}"/>
                </StackPanel>

                <!-- Charge display -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock xml:space="preserve">Charge: </TextBlock>
                    <TextBlock Text="{Binding Path=Charge.Charge}"/>
                    <TextBlock xml:space="preserve"> </TextBlock>
                    <TextBlock Text="{Binding Path=Charge.Unit}"/>
                </StackPanel>

                <!-- Mass display -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock xml:space="preserve">Mass: </TextBlock>
                    <TextBlock Text="{Binding Path=Mass.Mass}"/>
                    <TextBlock xml:space="preserve"> </TextBlock>
                    <TextBlock Text="{Binding Path=Mass.Unit}"/>
                </StackPanel>
                
                <!-- Delete button -->
                <Button x:Name="deleteBtn" Margin="20" Padding="5" Command="ApplicationCommands.Delete">Delete</Button>

            </StackPanel>
        </GroupBox>
        
        <!-- Choices of particles -->
        <DockPanel x:Name="dockPanelWithParticles"
            DockPanel.Dock="Bottom" LastChildFill="False" ButtonBase.Click="panelWithCharges_Click">

            <!-- Stationary particles choice -->
            <GroupBox Header="Stationary particles" Margin="50 10 10 10" DockPanel.Dock="Left">
                <StackPanel Orientation="Horizontal">

                    <controls:RadioButtonWithParticleType Padding="15" Margin="5" ParticleType="StationaryPositive"
                                 GroupName="particles" IsChecked="True">+Q
                    </controls:RadioButtonWithParticleType>
                    
                    <controls:RadioButtonWithParticleType Padding="15" Margin="5" ParticleType="StationaryNegative"
                                 GroupName="particles">-Q
                    </controls:RadioButtonWithParticleType>
                    
                </StackPanel>
            </GroupBox>
            
            <!-- Movable particles choice -->
            <GroupBox Header="Movable particles" Margin="10 10 50 10" DockPanel.Dock="Right">
                <StackPanel Orientation="Horizontal">

                    <controls:RadioButtonWithParticleType Padding="15" Margin="5" ParticleType="MovablePositive"
                                                    GroupName="particles">+q
                    </controls:RadioButtonWithParticleType>
                    <controls:RadioButtonWithParticleType Padding="15" Margin="5" ParticleType="MovableNegative"
                                                       GroupName="particles">-q
                    </controls:RadioButtonWithParticleType>

                </StackPanel>
            </GroupBox>

        </DockPanel>

            <!-- The Canvas that will be showing the particles -->
        <Canvas x:Name="canvasSpace" Background="LightBlue"  MouseUp="canvasSpace_MouseUp" Margin="10"
            ButtonBase.Click="canvasSpace_Click" SizeChanged="canvasSpace_SizeChanged" ClipToBounds="True"/>

    </DockPanel>
    
</Window>
